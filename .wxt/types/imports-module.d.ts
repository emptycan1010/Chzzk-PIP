// Generated by wxt
// Types for the #import virtual module
declare module '#imports' {
  export { browser, Browser } from 'wxt/browser'
  export { storage, StorageArea, WxtStorage, WxtStorageItem, StorageItemKey, StorageAreaChanges, MigrationError } from 'wxt/utils/storage'
  export { useAppConfig } from 'wxt/utils/app-config'
  export { ContentScriptContext, WxtWindowEventMap } from 'wxt/utils/content-script-context'
  export { createIframeUi, IframeContentScriptUi, IframeContentScriptUiOptions } from 'wxt/utils/content-script-ui/iframe'
  export { createIntegratedUi, IntegratedContentScriptUi, IntegratedContentScriptUiOptions } from 'wxt/utils/content-script-ui/integrated'
  export { createShadowRootUi, ShadowRootContentScriptUi, ShadowRootContentScriptUiOptions } from 'wxt/utils/content-script-ui/shadow-root'
  export { ContentScriptUi, ContentScriptUiOptions, ContentScriptOverlayAlignment, ContentScriptAppendMode, ContentScriptInlinePositioningOptions, ContentScriptOverlayPositioningOptions, ContentScriptModalPositioningOptions, ContentScriptPositioningOptions, ContentScriptAnchoredOptions, AutoMountOptions, StopAutoMount, AutoMount } from 'wxt/utils/content-script-ui/types'
  export { defineAppConfig, WxtAppConfig } from 'wxt/utils/define-app-config'
  export { defineBackground } from 'wxt/utils/define-background'
  export { defineContentScript } from 'wxt/utils/define-content-script'
  export { defineUnlistedScript } from 'wxt/utils/define-unlisted-script'
  export { defineWxtPlugin } from 'wxt/utils/define-wxt-plugin'
  export { injectScript, ScriptPublicPath, InjectScriptOptions } from 'wxt/utils/inject-script'
  export { InvalidMatchPattern, MatchPattern } from 'wxt/utils/match-patterns'
  export { useState, useCallback, useMemo, useEffect, useRef, useContext, useReducer } from 'react'
  export { fakeBrowser } from 'wxt/testing'
  export { FavoritesButtonPortal } from '../components/FavoriteAddButton'
  export { FavoritesListPortal } from '../components/FavoritesList'
  export { PIPPortal } from '../components/pip_button'
  export { RecordPortal } from '../components/rec_button'
  export { RecordOverlayPortal } from '../components/rec_overlay'
  export { ScreenShotPortal } from '../components/screenshot_button'
  export { SeekPortal } from '../components/seek'
  export { isMoz, isVODPage, isLivePage, isClipPage, isShortsPage, download } from '../utils/download'
  export { koreanToEnglish, useShortcut } from '../utils/hooks'
  export { setMaxHQ } from '../utils/max_hq'
  export { startRecord, startHighFrameRateRecord, stopRecord } from '../utils/record'
  export { setRecordInfo, getRecordInfo, setTempBlobURL, getTempBlobURL, RecordStateContext } from '../utils/record_info_helper'
  export { sanitizeFileName } from '../utils/save'
  export { createDraggablePreview } from '../utils/screenshot_preview'
  export { seekLeft, seekRight } from '../utils/seek'
  export { getStreamInfo } from '../utils/stream_info'
  export { ThemeContextProvider, useThemeContext } from '../utils/theme_context'
  export { useFFmpeg, toMP4, toMP4AAC, toGIF, toWEBP, segmentize, trim } from '../utils/transcode'
}
